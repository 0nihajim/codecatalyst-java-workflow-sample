Name: build
SchemaVersion: "1.0"

# Optional - Set automatic triggers.
Triggers:
  - Type: Push
    Branches:
      - main

# Required - Define action configurations.
Actions:
  List_Files:
    # Identifies the action. Do not modify this value.
    Identifier: aws/build@v1.0.0

    # Specifies the source and/or artifacts to pass to the action as input.
    Inputs:
      # Optional
      Sources:
        - WorkflowSource # This specifies that the action requires this Workflow as a source

    # Defines the action's properties.
    Configuration:
      # Required - Steps are sequential instructions that run shell commands
      Steps:
        - Run: ls -l
  Mvn_Clean:
    DependsOn:
      - List_Files
    # Identifies the action. Do not modify this value.
    Identifier: aws/build@v1.0.0

    # Specifies the source and/or artifacts to pass to the action as input.
    Inputs:
      # Optional
      Sources:
        - WorkflowSource # This specifies that the action requires this Workflow as a source

    # Defines the action's properties.
    Configuration:
      # Required - Steps are sequential instructions that run shell commands
      Steps:
        - Run: ./mvnw -ntp clean
  CodeGuruReview:
    DependsOn:
      - Mvn_Clean
    Identifier: aws/build@v1.0.0
    Inputs:
      # Optional
      Sources:
        - WorkflowSource # This specifies that the action requires this Workflow as a source
    Outputs:
      Reports:
        MySAReport:
          Format: SARIFSA
          IncludePaths:
            - output/recommendations.sarif.json
    #          SuccessCriteria:
    #            StaticAnalysisBug:
    #              Number: 25
    #              Severity: HIGH
    #            StaticAnalysisSecurity:
    #              Number: 5
    #              Severity: CRITICAL
    #            StaticAnalysisQuality:
    #              Number: 10
    #              Severity: INFORMATIONAL
    Configuration:
      # Required - Steps are sequential instructions that run shell commands
      Steps:
        # use run-tests $FRAMEWORK to enable advanced testing features such as test case retries
        # see info link in shell commands section for more details
        - Run: curl -OL https://github.com/aws/aws-codeguru-cli/releases/download/0.1.0/aws-codeguru-cli.zip
        - Run: unzip aws-codeguru-cli.zip
        - Run: export PATH=$PATH:./aws-codeguru-cli/bin
        - Run: ./mvnw -ntp verify
        - Run: aws-codeguru-cli --root-dir ./ --build target/classes --src src --output ./output --no-prompt
    Compute:
      Type: EC2
    Environment:
      Connections:
        - Role: CodeCatalystTestEnvironmentRole
          Name: "123456789012"
      Name: TestEnvironment
  Mvn_Build_And_Deploy:
    DependsOn:
      - CodeGuruReview
    # Identifies the action. Do not modify this value.
    Identifier: aws/build@v1.0.0
    # Specifies the source and/or artifacts to pass to the action as input.
    Inputs:
      # Optional
      Sources:
        - WorkflowSource # This specifies that the action requires this Workflow as a source
    Outputs:
      # Optional; Automatically discover reports for popular test frameworks
      AutoDiscoverReports:
        Enabled: true
        # Use as prefix for the report files
        ReportNamePrefix: AutoDiscovered
      Artifacts:
        - Name: jar_artifact
          Files:
            - target/*.jar
    # Defines the action's properties.
    Configuration:
      # Required - Steps are sequential instructions that run shell commands
      Steps:
        - Run: ./mvnw -ntp verify
        - Run: cp settings.xml $HOME/.m2/settings.xml
        - Run: ls $HOME/.m2/
        - Run: export CODEARTIFACT_AUTH_TOKEN=`aws codeartifact get-authorization-token --domain artifact-store-demo --domain-owner 123456789012 --region us-east-1 --query authorizationToken --output text`
        - Run: mvn deploy
    Compute:
      Type: EC2
    Environment:
      Connections:
        - Role: CodeCatalystTestEnvironmentRole
          Name: "123456789012"
      Name: TestEnvironment
  Build_Docker_Image:
    DependsOn:
      - Mvn_Build_And_Deploy
    # Identifies the action. Do not modify this value.
    Identifier: aws/managed-test@v1.0.0

    # Specifies the source and/or artifacts to pass to the action as input.
    Inputs:
      # Optional
      Sources:
        - WorkflowSource # This specifies that the action requires this Workflow as a source
      Artifacts:
        - jar_artifact

    Outputs:
      # Optional; Automatically discover reports for popular test frameworks
      AutoDiscoverReports:
        Enabled: true
        # Use as prefix for the report files
        ReportNamePrefix: rpt

    # Defines the action's properties.
    Configuration:
      # Required - Steps are sequential instructions that run shell commands
      Steps:
        # use run-tests $FRAMEWORK to enable advanced testing features such as test case retries
        # see info link in shell commands section for more details
        - Run: mkdir target
        - Run: ls $CATALYST_SOURCE_DIR_jar_artifact
        - Run: cp $CATALYST_SOURCE_DIR_jar_artifact/target/*.jar ./target
        - Run: ls target/
        - Run: export MVN_VERSION=`mvn help:evaluate -Dexpression=project.version -q -DforceStdout`
        - Run: docker login -u AWS -p $(aws ecr get-login-password --region us-east-1) 123456789012.dkr.ecr.us-east-1.amazonaws.com
        - Run: docker build -t rest-calculator .
        - Run: docker tag rest-calculator:latest 123456789012.dkr.ecr.us-east-1.amazonaws.com/rest-calculator:$MVN_VERSION
        - Run: docker push 123456789012.dkr.ecr.us-east-1.amazonaws.com/rest-calculator:$MVN_VERSION
    Compute:
      Type: EC2
    Environment:
      Connections:
        - Role: CodeCatalystTestEnvironmentRole
          Name: "123456789012"
      Name: TestEnvironment
